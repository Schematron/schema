<?xml version="1.0" encoding="UTF-8"?>
<!-- 
        
    XSpec tests for Schematron schema schema (Annex B of ISO standard).
    Tested under XSpec v3.0
    
-->
<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec" xmlns:sch='http://purl.oclc.org/dsdl/schematron' schematron="schematron.sch">
    <x:scenario label="demo-01">
        <x:context><schema xmlns="http://purl.oclc.org/dsdl/schematron">
            <param name="myParam"/>
            <param name="myParam"/>
            <phase id='faulty'>
                <active pattern="p1"/>
            </phase>
            <phase id='fault-free'>
                <active pattern="p2"/>
            </phase>
            <pattern id="p2"/>
            <pattern id='p3' is-a='foo'/>
            <pattern id='p4' is-a='bar'>
                <param name="blort"/>
                <param name="not-declared"/>
            </pattern>
            <pattern id='bar' abstract='true'>
                <param name='blort'/>
            </pattern>
            <pattern id="p5">
                <let name='blort'/>
                <let name='wibble'/>
                <rule abstract='true' id='r1'/>
                <extends rule='r1'/>
                <extends rule='r2'/>
            </pattern>
            <pattern id='p6' abstract='true'>
                <param name="blort"/>
                <param name="blort"/>
            </pattern>
            <pattern id='p7' is-a='bar'>
                <param name="blort"/>
            </pattern>
            <pattern id='p8' abstract='true'>
                <!-- abstract pattern param contains default value -->
                <param name="jam" value='spam'/>
            </pattern>
            <pattern id='p9' is-a='p8'>
                <!-- concrete pattern param missing; use default from abstract -->
                <param name="jam"/>
            </pattern>
            <pattern id='p10' is-a='p8'>
                <!-- concrete pattern param overrides default value -->
                <param name="jam" value='clam'/>
            </pattern>
            <pattern id="p11" abstract='true'>
                <!-- abstract pattern param has no default value -->
                <param name="sham"/>
            </pattern>
            <pattern id='p12' is-a='p11'>
                <!-- concrete pattern param specifies value -->
                <param name="sham" value='shazam'/>
            </pattern>
        </schema></x:context>

        <x:scenario label="active pattern references">
            <x:expect-not-assert
                label="active pattern referenced correctly" id="active-patterns"
                location="/sch:schema/sch:phase[@id='fault-free']/sch:active"/>
            <x:expect-assert label="active pattern missing"
                id="active-patterns" location="/sch:schema/sch:phase[@id='faulty']/sch:active"/>
        </x:scenario>
        
        <x:scenario label="abstract pattern references">
            <x:expect-assert label="abstract pattern missing"
                id="abstract-patterns"
                location="/sch:schema[1]/sch:pattern[@id='p3']"/>
            <x:expect-not-assert label="abstract pattern referenced correctly"
                id="abstract-patterns"
                location="/sch:schema[1]/sch:pattern[@id='p4']"/>
        </x:scenario>
        
        <x:scenario label="abstract rule references">
            <x:expect-assert label="abstract rule missing"
            id="abstract-rules"
            location="/sch:schema/sch:pattern[@id='p5']/sch:extends[@rule='r2']"/>
            <x:expect-not-assert label="abstract rule referenced correctly"
                id="abstract-rules"
                location="/sch:schema/sch:pattern[@id='p5']/sch:extends[@rule='r1']"/>
        </x:scenario>
        
        <x:scenario label="parameter variable name clash">
            <x:expect-assert label="param variable name clash"
                id="param-variable-clash"
                location="/sch:schema/sch:pattern[@id='p5']/sch:let[@name='blort']"/>
            <x:expect-not-assert label="param variable no name clash"
                id="param-variable-clash"
                location="/sch:schema/sch:pattern[@id='p5']/sch:let[@name='wibble']"/>
        </x:scenario>
        
        <x:scenario label="schema param dupe name">
            <x:expect-assert label="duplicate schema param"
            id="param-name"
            location="/sch:schema/sch:param[1]"/>
            <x:expect-assert label="duplicate pattern param"
                id="param-name"
                location="/sch:schema/sch:pattern[@id='p6']/sch:param[1]"/>
            <x:expect-not-assert label="distinct pattern param"
                id="param-name"
                location="/sch:schema/sch:pattern[@id='bar']/sch:param[1]"/>
        </x:scenario>
        
        <!-- not-assert version of previous scenario, with no duplicate schema params -->
        <x:scenario label="schema param dupe name">
            <x:context><sch:schema>
                <sch:param name='pram1'/>
                <sch:param name='pram2'/>
            </sch:schema></x:context>
            <x:expect-not-assert label="distinct schema param"
                id="param-name"
                location="/sch:schema/sch:param[1]"/>
        </x:scenario>
        
        <x:scenario label="concrete and abstract param names match">
            <x:expect-assert label="param name not declared for abstract pattern"
                id="param-names-match"
                location="/sch:schema/sch:pattern[@id='p4']"/>
            <x:expect-not-assert label="param name declared for abstract pattern"
                id="param-names-match"
                location="/sch:schema/sch:pattern[@id='p7']"/>
        </x:scenario>
        
        <x:scenario label="pattern param value must be present">
            <x:expect-assert label="param value not present on concrete or abstract pattern params"
                id="missing-param-value"
                location="/sch:schema/sch:pattern[@id='p7']/sch:param"/>
            <x:expect-not-assert label="param value defaults to abstract pattern param"
                id="missing-param-value"
                location="/sch:schema/sch:pattern[@id='p9']/sch:param"/>
            <x:expect-not-assert label="concrete pattern param value overrides abstract pattern default param value"
                id="missing-param-value"
                location="/sch:schema/sch:pattern[@id='p10']/sch:param"/>
            <x:expect-not-assert label="concrete pattern param specifies value (no abstract pattern param default)"
                id="missing-param-value"
                location="/sch:schema/sch:pattern[@id='p12']/sch:param"/>
        </x:scenario>
    </x:scenario>
</x:description>
